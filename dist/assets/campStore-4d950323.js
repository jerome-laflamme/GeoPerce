import{d as s}from"./mapStore-070bf7cb.js";import{a as r}from"./axios-bff3f665.js";const i="/api/auth";async function l(e){const t=await r.post(i,e);if(t.data.error)throw new Error("Client error in signIn() : "+t.data.error);return t.data}async function d(){await r.delete(i)}const n="/api/users";async function f(e){const t=await r.post(n,e);if(t.data.error)throw new Error(t.data.error);return t.data}async function p(e){const t=await r.post(`${n}/update`,{params:{user:e}});if(t.data.error)throw new Error(t.data.error);return t.data}async function m(){return await(await fetch(`${n}`)).json()}const M=s("user",{state:()=>({currentUser:void 0,error:null}),getters:{isAuthenticated(){return this.currentUser!==void 0&&this.currentUser!==null}},actions:{async createUser(e){try{this.currentUser=await f(e),this.error=null}catch(t){this.currentUser=void 0,this.error=t.message}},async updateUser(){try{const e=this.currentUser;await p(e),this.error=null}catch(e){this.currentUser=void 0,this.error=e.message}},async signIn(e){try{this.currentUser=await l(e),this.error=null}catch(t){this.currentUser=void 0,this.error=t}},async fetchCurrentUser(){try{this.currentUser=await m(),this.error=null}catch(e){this.currentUser=null,this.error=e}},async signOut(){try{console.log("signout in the store"),await d(),this.currentUser=null,this.error=null}catch(e){this.error=e}}}}),I=s("reservation",{state:()=>({activeForm:!1,mapCenter:[48.52272,-64.21673],toggleFeedbackMsg:!1,feedbackMsg:"",arrivalDate:new Date,nightsIn:1,filters:{services:"0",amp:0,campLength:0},selectedCamp:{},bookingInfo:{wantedDates:[],name:"",email:"",phone:"",equipment:"",card:{name:"",cardNumber:"",cvv:"",expiration:""}},camps:[]}),actions:{getWantedDates(){const e=[this.arrivalDate];for(let t=1;t<this.nightsIn;t++)e.push(new Date(this.arrivalDate.getTime()+t*24*60*60*1e3));return e},async fetchCamps(){try{const e=await r.get("devlo15.team/api/camp",{params:{wantedDates:this.getWantedDates(),filters:{services:this.filters.services,amps:this.filters.amp,campLength:this.filters.campLength}}});this.camps=e.data}catch(e){console.log(e)}},async confirmReservation(){this.feedbackMsg="",this.toggleFeedbackMsg=!1,this.validation()},validation(){if(this.arrivalDate===new Date){this.feedbackMsg="S'il-vous-plaît selectionner une date d'arrivée",this.toggleFeedbackMsg=!0;return}let e=this.bookingInfo.name.split(" ");if(e.length<2||!this.bookingInfo.name){this.feedbackMsg="S'il-vous-plaît entrer votre nom complet",this.toggleFeedbackMsg=!0;return}if(e[0].length<3||e[1].length<3){this.feedbackMsg="Chaque nom doit contenir un minimum de 3 caractères",this.toggleFeedbackMsg=!0;return}let t=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;if(!this.bookingInfo.email||!t.test(this.bookingInfo.email)){this.feedbackMsg="S'il-vous-plaît entrer une adresse courriel valide",this.toggleFeedbackMsg=!0;return}let c=/^[0-9]{10}$/;if(!this.bookingInfo.phone||this.bookingInfo.phone.length<10||!c.test(this.bookingInfo.phone)){this.feedbackMsg="Le numéro de téléphone doit contenir 10 chiffres",this.toggleFeedbackMsg=!0;return}if(!this.bookingInfo.equipment){this.feedbackMsg="S'il-vous-plaît selectionner l'équipement vous utilisez",this.toggleFeedbackMsg=!0;return}if(!this.bookingInfo.card.name){this.feedbackMsg="S'il-vous-plaît entrer le nom sur la carte",this.toggleFeedbackMsg=!0;return}let h=/^[0-9]{16}$/;if(!this.bookingInfo.card.cardNumber||this.bookingInfo.card.cardNumber.length<16||!h.test(this.bookingInfo.card.cardNumber)){this.feedbackMsg="Le numéro de carte doit être composé de 16 chiffres.",this.toggleFeedbackMsg=!0;return}let u=/^[0-9]{3}$/;if(!this.bookingInfo.card.cvv||this.bookingInfo.card.cvv.length!==3||!u.test(this.bookingInfo.card.cvv)){this.feedbackMsg="Le CVV doit contenir 3 chiffres.",this.toggleFeedbackMsg=!0;return}let g=/^[0-9]{2}\/[0-9]{2}$/;if(!this.bookingInfo.card.expiration||!g.test(this.bookingInfo.card.expiration)||this.bookingInfo.card.expiration.length!==5){this.feedbackMsg="La date d'expiration doit être au format MM/AA",this.toggleFeedbackMsg=!0;return}if(this.feedbackMsg===""){this.feedbackMsg="Votre réservation a été confirmée! Vous recevrez un courriel de confirmation.",this.toggleFeedbackMsg=!0;return}}}}),a="/api/camp";r.interceptors.request.use(e=>(console.log("Starting Request",JSON.stringify(e,null,2)),e));async function b(e){const t=await r.post(`${a}/save`,e);if(t.data.error)throw new Error(t.data.error);return t.data}async function k(e){const t=await r.post(`${a}/update`,e);if(t.data.error)throw new Error(t.data.error);return t.data}async function o(){const e=await r.get(`${a}`);if(e.data.error)throw new Error(e.data.error);return e.data}async function v(e){const t=await r.post(`${a}/${e}`);if(t.data.error)throw new Error(t.data.error);return t.data}const U=s("camp",{state:()=>({camps:[]}),getters:{getCamps(e){return e.camps}},actions:{async deleteCamp(e){try{await v(e),await o()}catch(t){console.log(t)}},async createCamp(e){try{await b(e),await o()}catch(t){console.log(t)}},async updateCamp(e){try{console.log(e),await k(e)}catch(t){console.log(t)}}}});export{I as a,U as b,M as u};
